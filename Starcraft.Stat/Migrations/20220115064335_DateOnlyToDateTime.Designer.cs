// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Starcraft.Stat.DataBase;

#nullable disable

namespace Starcraft.Stat.Migrations
{
    [DbContext(typeof(StarcraftDbContext))]
    [Migration("20220115064335_DateOnlyToDateTime")]
    partial class DateOnlyToDateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Starcraft.Stat.DbModels.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Team1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Team2Id")
                        .HasColumnType("integer");

                    b.Property<byte>("Winner")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Starcraft.Stat.DbModels.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "@gregzhadko"
                        },
                        new
                        {
                            Id = 2,
                            Name = "@Novikov_N"
                        },
                        new
                        {
                            Id = 3,
                            Name = "@sivykh"
                        },
                        new
                        {
                            Id = 4,
                            Name = "@dfomin"
                        });
                });

            modelBuilder.Entity("Starcraft.Stat.DbModels.Race", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Races");

                    b.HasData(
                        new
                        {
                            Name = "Terran"
                        },
                        new
                        {
                            Name = "Zerg"
                        },
                        new
                        {
                            Name = "Protoss"
                        });
                });

            modelBuilder.Entity("Starcraft.Stat.DbModels.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Player1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Player2Id")
                        .HasColumnType("integer");

                    b.Property<string>("Race1Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Race2Id")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasIndex("Race1Id");

                    b.HasIndex("Race2Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Starcraft.Stat.DbModels.Game", b =>
                {
                    b.HasOne("Starcraft.Stat.DbModels.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Starcraft.Stat.DbModels.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team1");

                    b.Navigation("Team2");
                });

            modelBuilder.Entity("Starcraft.Stat.DbModels.Team", b =>
                {
                    b.HasOne("Starcraft.Stat.DbModels.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Starcraft.Stat.DbModels.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Starcraft.Stat.DbModels.Race", "Race1")
                        .WithMany()
                        .HasForeignKey("Race1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Starcraft.Stat.DbModels.Race", "Race2")
                        .WithMany()
                        .HasForeignKey("Race2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player1");

                    b.Navigation("Player2");

                    b.Navigation("Race1");

                    b.Navigation("Race2");
                });
#pragma warning restore 612, 618
        }
    }
}
